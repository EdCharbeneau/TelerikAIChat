@page "/"
@using TelerikBlazorApp1.Client.Features.OpenAI.Services
@inject IOpenAiService service
@inject ConversationState state
@inject ISpeechRecognitionService SpeechRecognition
@inject ITextToSpeechService TextToSpeech

<TelerikAIPrompt @ref="@AIPromptRef"
                 @bind-Prompt="@prompt"
                 OnPromptRequest="@HandlePromptRequest"
                 Width="500px">
    <AIPromptViews>
        <AIPromptPromptView ButtonText="Prompt" ButtonIcon="@SvgIcon.Comment">
            <FooterTemplate>
                <div class="k-actions k-actions-start k-actions-horizontal k-prompt-actions">
                    <TelerikButton ThemeColor="@(ThemeConstants.Button.ThemeColor.Primary)" Icon="@SvgIcon.Sparkles" OnClick="@(()=>HandlePromptRequest(new() {Prompt = prompt}))" Enabled="!isBusy">
                        <TelerikLoader Class="loader-indicator" ThemeColor="@(ThemeConstants.Loader.ThemeColor.Light)" Size="@(ThemeConstants.Loader.Size.Small)" Visible="isBusy"></TelerikLoader>
                        @(isBusy ? "Generating" : "Generate")
                    </TelerikButton>
                    <TelerikButton OnClick="OnRecord" Enabled="!isBusy">
                        <TelerikLoader Class="loader-indicator" Size="@(ThemeConstants.Loader.Size.Small)" Visible="isBusy"></TelerikLoader>
                        🎙️
                    </TelerikButton>
                </div>
            </FooterTemplate>
        </AIPromptPromptView>
        <AIPromptOutputView ButtonText="Responses">
            <FooterTemplate>
                @if (isPlaying)
                {
                    <audio autoplay controls><source src="@audio" /></audio>
                }
            </FooterTemplate>
        </AIPromptOutputView>
    </AIPromptViews>
</TelerikAIPrompt>